#!/bin/bash
macroS='./template/macro.template.h'
macroD='./template/macro.h'
map=(107 108 109 110 112 113 114 115 116 204 205 211 302 303 306 407 408 409 410 412 413 414 415 416 507 508 509 510 512 513 514 515 516)
N=8
M=2 
platforms=(c1060 c2050 k20m hd7970 x5650 snb opteron phi)
pfconfig=('-p 0 -t gpu -d 1' '-p 2 -t gpu -d 0' '-p 2 -t gpu -d 0' '-p 0 -t gpu -d 0' '-p 1 -t cpu -d 0' '-p 1 -t cpu -d 0' '-p 1 -t cpu -d 0' '-p 0 -t acc -d 0')

# get parameters
echo $#
if [ $# -lt 1 ]; then
	echo "please input your target platform:"
	echo "available platforms: "${platforms[*]}
	exit 2
fi

# get index and the configure file
idx=0
cnt=0
for elem in "${platforms[@]}"
do
	if [ $elem = $1 ]; then
		idx=$cnt		
	fi
	cnt=$(($cnt+1))
done

# change the template file
  # macro.h
VARIFY=" "
cat ${macroS} | sed "s/@VARIFY/${VARIFY}/g" > ${macroD}
  # Makefile

# generate checking code
if [ $# -eq 2 ]; then
	echo "re-generate the source code ..."
	bash ./generator.sh 
fi

# let us start with 2 MAPs
for m1 in {0..32..1}; do
for m2 in {0..32..1}; do	# for each combination
	mmDirName="${map[${m1}]}_${map[${m2}]}"
	# global vars
	mp=(${map[$m1]} ${map[$m2]}) # e.g., (107, 512)
	echo "map1: ${mp[0]}, map2: ${mp[1]}"
	echo "--------------------------------"
	cd ./${mmDirName}
	# use local memory one-by-one (M=2, see above)
	for (( m=0; m<${M}+1; m++ )); do
		cd ./v${m}		
		make clean foo=${platforms[$idx]}; make foo=${platforms[$idx]}
		sh ./run ${platforms[$idx]}  ${pfconfig[$idx]}
		cd ../
	done	
	cd ../
done
done

